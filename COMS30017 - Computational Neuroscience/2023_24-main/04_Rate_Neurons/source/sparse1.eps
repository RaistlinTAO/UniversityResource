%!PS-Adobe-2.0 EPSF-2.0
%%Title: sparse1.tex
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Mon Mar  9 16:42:10 2015
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sparse1.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (cscjh)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar  9 16:42:10 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1663 440 M
63 0 V
4272 0 R
-63 0 V
1663 1524 M
63 0 V
4272 0 R
-63 0 V
1663 2608 M
63 0 V
4272 0 R
-63 0 V
1663 3691 M
63 0 V
4272 0 R
-63 0 V
1663 4775 M
63 0 V
4272 0 R
-63 0 V
1663 440 M
0 63 V
0 4272 R
0 -63 V
2747 440 M
0 63 V
0 4272 R
0 -63 V
3831 440 M
0 63 V
0 4272 R
0 -63 V
4914 440 M
0 63 V
0 4272 R
0 -63 V
5998 440 M
0 63 V
0 4272 R
0 -63 V
stroke
LTa
1663 2608 M
4335 0 V
3831 440 M
0 4335 V
stroke
LTb
1663 4775 N
0 -4335 V
4335 0 V
0 4335 V
-4335 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
3221 2041 Pls
4158 2925 Pls
2786 1650 Pls
2598 1503 Pls
3439 2356 Pls
4430 3302 Pls
3230 2015 Pls
3423 2041 Pls
3511 2351 Pls
4510 3387 Pls
3993 2812 Pls
4031 2846 Pls
2220 1108 Pls
3821 2608 Pls
2537 1371 Pls
4306 3168 Pls
3649 2464 Pls
2273 1076 Pls
5100 4015 Pls
5049 3741 Pls
2447 1103 Pls
2657 1501 Pls
3240 2012 Pls
4874 3642 Pls
4421 3119 Pls
4282 3170 Pls
4353 3344 Pls
2657 1514 Pls
3661 2370 Pls
2407 1174 Pls
3915 2692 Pls
3188 2004 Pls
4061 2781 Pls
2892 1506 Pls
2219 1156 Pls
2561 1183 Pls
2593 1396 Pls
2521 1122 Pls
2935 1749 Pls
4377 3177 Pls
2789 1659 Pls
3942 2822 Pls
2967 1835 Pls
4525 3243 Pls
2989 1727 Pls
4364 3189 Pls
5148 3973 Pls
4830 3693 Pls
4720 3387 Pls
3637 2347 Pls
4157 3071 Pls
3253 2027 Pls
3303 2014 Pls
5275 3934 Pls
3067 1842 Pls
5066 3709 Pls
3881 2487 Pls
5025 3850 Pls
5071 3716 Pls
4174 2903 Pls
2754 1720 Pls
3412 2142 Pls
2563 1381 Pls
3908 2747 Pls
3703 2505 Pls
4257 2999 Pls
3524 2135 Pls
4697 3388 Pls
3340 1947 Pls
2171 1073 Pls
3686 2462 Pls
2827 1611 Pls
4400 3114 Pls
3134 2105 Pls
4607 3472 Pls
2391 1304 Pls
2358 1028 Pls
4411 3175 Pls
4236 3030 Pls
3046 1820 Pls
2860 1593 Pls
2910 1697 Pls
2652 1306 Pls
4416 3242 Pls
5275 3988 Pls
3872 2741 Pls
4189 2906 Pls
4702 3538 Pls
5080 3672 Pls
5135 3823 Pls
3705 2454 Pls
4803 3611 Pls
3337 2102 Pls
3796 2659 Pls
4718 3480 Pls
3414 2102 Pls
3803 2533 Pls
4490 3305 Pls
5127 3969 Pls
4280 3021 Pls
5001 3701 Pls
5436 4204 Pls
3453 2138 Pls
4547 3409 Pls
3797 2674 Pls
5352 4288 Pls
3722 2454 Pls
4385 3205 Pls
4809 3459 Pls
2323 1167 Pls
4437 3307 Pls
2372 1308 Pls
5213 3910 Pls
3297 1962 Pls
5089 3815 Pls
2906 1643 Pls
2913 1553 Pls
4577 3445 Pls
4149 2945 Pls
4514 3305 Pls
2967 1769 Pls
3504 2133 Pls
5487 4294 Pls
3607 2175 Pls
2690 1498 Pls
4784 3647 Pls
3287 2124 Pls
2711 1467 Pls
4958 3674 Pls
4232 2925 Pls
4169 2848 Pls
2630 1304 Pls
4539 3224 Pls
5309 4014 Pls
5306 4196 Pls
3917 2778 Pls
4172 2956 Pls
3258 2082 Pls
5074 3993 Pls
5195 4035 Pls
5406 4118 Pls
2427 1373 Pls
2973 1783 Pls
2386 1174 Pls
4491 3231 Pls
2687 1383 Pls
3921 2610 Pls
3453 2298 Pls
3009 1743 Pls
3074 1684 Pls
5470 4140 Pls
5263 3984 Pls
4443 3213 Pls
3578 2392 Pls
3718 2607 Pls
2889 1503 Pls
3411 2118 Pls
5094 3803 Pls
3071 1928 Pls
2779 1476 Pls
3483 2262 Pls
2911 1737 Pls
2822 1544 Pls
4355 3138 Pls
4378 3190 Pls
4210 2892 Pls
5484 4171 Pls
3912 2647 Pls
2497 1111 Pls
2306 1120 Pls
4784 3617 Pls
5008 3741 Pls
3712 2519 Pls
5188 4049 Pls
5042 3956 Pls
4717 3426 Pls
2877 1625 Pls
2453 1125 Pls
4626 3417 Pls
4782 3423 Pls
5394 4247 Pls
3025 1780 Pls
5006 3899 Pls
4907 3653 Pls
4039 2917 Pls
4272 3079 Pls
3972 2669 Pls
4254 3043 Pls
4218 2956 Pls
3664 2271 Pls
2662 1403 Pls
2656 1439 Pls
4847 3687 Pls
4545 3500 Pls
3506 2282 Pls
4114 2757 Pls
2329 1230 Pls
3769 2589 Pls
4392 3034 Pls
2605 1360 Pls
4635 3336 Pls
3569 2279 Pls
3148 2064 Pls
2656 1354 Pls
2630 1504 Pls
4460 3199 Pls
2865 1796 Pls
2881 1621 Pls
4091 2976 Pls
3074 1775 Pls
4139 2975 Pls
5262 4005 Pls
4023 2776 Pls
5465 4162 Pls
5224 3994 Pls
4059 2796 Pls
3936 2711 Pls
3637 2213 Pls
4303 2982 Pls
4038 2797 Pls
4720 3497 Pls
2981 1751 Pls
3242 2085 Pls
3449 2068 Pls
5305 4148 Pls
4975 3769 Pls
3446 2127 Pls
2255 961 Pls
4159 2894 Pls
5103 3910 Pls
4567 3485 Pls
4788 3659 Pls
2454 1399 Pls
4876 3570 Pls
5078 3915 Pls
3168 1890 Pls
2260 1020 Pls
2629 1450 Pls
4563 3481 Pls
2385 1197 Pls
4616 3359 Pls
2442 1381 Pls
5233 4010 Pls
3490 2349 Pls
4250 3109 Pls
3615 2285 Pls
2392 1113 Pls
4476 3307 Pls
4445 3278 Pls
3774 2540 Pls
4817 3557 Pls
3954 2612 Pls
5107 3961 Pls
3486 2377 Pls
5341 4226 Pls
4691 3309 Pls
4460 3201 Pls
3575 2399 Pls
3887 2711 Pls
4771 3435 Pls
4329 2945 Pls
2297 930 Pls
2351 1072 Pls
4496 3260 Pls
4894 3567 Pls
5057 3863 Pls
2643 1552 Pls
4359 3163 Pls
4987 3943 Pls
2581 1358 Pls
5417 4165 Pls
2590 1426 Pls
3990 2678 Pls
3101 1923 Pls
5331 4145 Pls
3321 2241 Pls
5195 4093 Pls
4094 2851 Pls
2703 1280 Pls
2334 1208 Pls
5351 4167 Pls
2708 1421 Pls
4717 3329 Pls
4120 3001 Pls
4034 2905 Pls
5418 4120 Pls
4147 2890 Pls
3246 2159 Pls
5038 3772 Pls
5133 3813 Pls
3578 2312 Pls
3406 2130 Pls
3253 2029 Pls
4041 2743 Pls
3448 2051 Pls
4885 3706 Pls
4441 3063 Pls
3535 2257 Pls
2864 1607 Pls
4088 2740 Pls
4219 2861 Pls
4652 3339 Pls
2284 1074 Pls
5383 4123 Pls
2813 1461 Pls
2642 1534 Pls
2981 1793 Pls
3176 1951 Pls
4388 3287 Pls
2478 1124 Pls
2786 1580 Pls
4512 3369 Pls
2311 1100 Pls
3604 2509 Pls
2617 1305 Pls
4426 3295 Pls
4134 3008 Pls
2880 1517 Pls
5377 4296 Pls
2611 1416 Pls
4409 3052 Pls
4300 3134 Pls
4008 2906 Pls
3607 2528 Pls
4850 3628 Pls
4296 3167 Pls
2815 1592 Pls
4273 3121 Pls
4130 2862 Pls
2948 1575 Pls
4468 3097 Pls
2405 1161 Pls
3422 2203 Pls
4327 3146 Pls
3108 1953 Pls
3872 2603 Pls
5350 4130 Pls
2510 1380 Pls
2714 1528 Pls
3928 2595 Pls
4648 3337 Pls
2321 1116 Pls
4363 3038 Pls
2575 1420 Pls
4009 2643 Pls
2307 1044 Pls
3775 2653 Pls
3738 2418 Pls
3696 2547 Pls
4346 2998 Pls
5152 4058 Pls
3645 2404 Pls
5086 3884 Pls
3139 1777 Pls
2355 1106 Pls
5151 3922 Pls
2384 1164 Pls
2413 1151 Pls
3582 2517 Pls
2250 1155 Pls
2368 1194 Pls
3985 2690 Pls
5541 4298 Pls
4364 3063 Pls
4762 3609 Pls
5053 3773 Pls
5128 3728 Pls
3054 1835 Pls
3842 2733 Pls
4320 3115 Pls
2990 1929 Pls
3742 2412 Pls
2784 1540 Pls
3369 2121 Pls
3299 2241 Pls
3406 2369 Pls
4014 2815 Pls
2855 1661 Pls
4682 3497 Pls
3188 2033 Pls
3769 2533 Pls
4814 3633 Pls
4848 3778 Pls
3844 2571 Pls
3555 2326 Pls
3669 2508 Pls
3090 1796 Pls
3152 1926 Pls
3049 1828 Pls
2596 1260 Pls
4402 3047 Pls
3900 2716 Pls
5074 3856 Pls
3611 2322 Pls
4733 3433 Pls
3255 1984 Pls
2980 1698 Pls
2246 1099 Pls
2933 1627 Pls
4954 3782 Pls
4599 3413 Pls
5130 3952 Pls
4873 3596 Pls
3915 2601 Pls
4878 3745 Pls
2421 1248 Pls
4551 3198 Pls
5061 3945 Pls
3033 1905 Pls
2997 1908 Pls
5396 4212 Pls
3572 2313 Pls
3038 1835 Pls
2550 1297 Pls
3994 2818 Pls
4866 3648 Pls
4600 3184 Pls
4557 3213 Pls
3204 2069 Pls
3478 2198 Pls
3396 2102 Pls
2280 925 Pls
4377 3092 Pls
2696 1593 Pls
2776 1510 Pls
4955 3554 Pls
4482 3375 Pls
2679 1379 Pls
5186 3989 Pls
3893 2680 Pls
5408 4010 Pls
2847 1607 Pls
4463 3346 Pls
4175 2996 Pls
2919 1632 Pls
3048 1775 Pls
3344 2089 Pls
4182 3017 Pls
4142 3128 Pls
5482 4124 Pls
4069 2772 Pls
3822 2664 Pls
3458 2373 Pls
4224 3069 Pls
2914 1778 Pls
5107 3850 Pls
4792 3750 Pls
4109 2972 Pls
3998 2763 Pls
4812 3545 Pls
5415 4266 Pls
4494 3349 Pls
5254 3888 Pls
2592 1179 Pls
3105 1815 Pls
4216 2946 Pls
2878 1585 Pls
3166 2024 Pls
5020 3686 Pls
4474 3074 Pls
2581 1313 Pls
5030 3928 Pls
5523 4187 Pls
3667 2482 Pls
5216 4003 Pls
5120 3897 Pls
4598 3329 Pls
3623 2370 Pls
4720 3429 Pls
4531 3265 Pls
5202 3781 Pls
4279 2937 Pls
2980 1750 Pls
2787 1610 Pls
4871 3668 Pls
4242 3124 Pls
3774 2637 Pls
3634 2318 Pls
3779 2562 Pls
3646 2527 Pls
5156 3803 Pls
4137 2935 Pls
5118 3983 Pls
4833 3553 Pls
3202 2117 Pls
5194 3972 Pls
4517 3257 Pls
4777 3632 Pls
2814 1438 Pls
5033 3717 Pls
3815 2692 Pls
3820 2596 Pls
3171 1898 Pls
3407 2221 Pls
2244 964 Pls
5076 3773 Pls
5402 4242 Pls
5205 4022 Pls
5082 3794 Pls
2598 1479 Pls
3355 2174 Pls
5311 4015 Pls
5103 3844 Pls
3997 2704 Pls
3115 1979 Pls
2379 1185 Pls
2905 1683 Pls
3980 2712 Pls
3257 1934 Pls
2666 1419 Pls
5354 4128 Pls
5338 4222 Pls
3396 2366 Pls
3183 1789 Pls
2716 1655 Pls
4534 3274 Pls
3536 2208 Pls
3571 2401 Pls
5363 4025 Pls
4016 2795 Pls
5129 3866 Pls
2528 1181 Pls
4949 3859 Pls
5191 4060 Pls
4494 3173 Pls
2252 1051 Pls
3709 2504 Pls
4565 3308 Pls
3664 2396 Pls
2396 1151 Pls
2733 1353 Pls
5034 3871 Pls
2430 1260 Pls
4892 3567 Pls
4080 2825 Pls
3131 1852 Pls
5279 4045 Pls
2850 1554 Pls
2955 1787 Pls
3530 2228 Pls
4687 3552 Pls
5280 3967 Pls
2402 1140 Pls
2247 1157 Pls
5503 4194 Pls
5195 3839 Pls
4979 3792 Pls
3919 2694 Pls
2835 1644 Pls
3490 2313 Pls
3942 2771 Pls
4193 2992 Pls
4077 2722 Pls
4137 2917 Pls
3997 2760 Pls
2370 1120 Pls
3387 2156 Pls
4541 3451 Pls
3434 2060 Pls
5316 4172 Pls
4463 3234 Pls
2452 1250 Pls
4003 2772 Pls
3966 2584 Pls
3709 2660 Pls
3057 1799 Pls
3846 2613 Pls
2965 1770 Pls
2613 1440 Pls
3685 2484 Pls
2471 1255 Pls
2582 1309 Pls
2477 1392 Pls
3084 1950 Pls
4877 3754 Pls
3559 2291 Pls
2387 1304 Pls
5029 3917 Pls
2209 1073 Pls
2969 1654 Pls
2160 1122 Pls
3565 2376 Pls
2515 1160 Pls
5137 3786 Pls
4644 3453 Pls
3700 2495 Pls
2442 1044 Pls
4017 2793 Pls
2531 1301 Pls
4462 3237 Pls
4365 3178 Pls
3765 2543 Pls
2867 1646 Pls
5289 4085 Pls
3720 2477 Pls
5414 4222 Pls
4689 3373 Pls
4719 3387 Pls
5289 3956 Pls
5146 4076 Pls
4712 3407 Pls
2773 1589 Pls
5092 3877 Pls
3388 2207 Pls
3139 1865 Pls
4013 2773 Pls
5318 4215 Pls
3862 2633 Pls
3394 2115 Pls
3638 2528 Pls
5316 4145 Pls
2898 1728 Pls
3476 2289 Pls
4975 3781 Pls
3963 2798 Pls
2818 1476 Pls
2193 1031 Pls
2618 1510 Pls
2549 1373 Pls
4918 3778 Pls
2958 1800 Pls
2434 1181 Pls
3456 2143 Pls
3705 2467 Pls
3320 2127 Pls
5232 4003 Pls
2978 1714 Pls
5272 4136 Pls
2552 1306 Pls
4135 2774 Pls
3300 1976 Pls
4808 3578 Pls
4200 2945 Pls
3115 1950 Pls
2886 1584 Pls
3143 1881 Pls
2853 1776 Pls
4034 2850 Pls
3584 2259 Pls
3646 2465 Pls
3616 2417 Pls
4403 3314 Pls
3914 2679 Pls
2389 1288 Pls
2566 1348 Pls
2808 1688 Pls
3569 2366 Pls
4305 3053 Pls
3357 2114 Pls
4715 3624 Pls
3554 2386 Pls
4072 2859 Pls
4151 2984 Pls
4860 3737 Pls
2967 1723 Pls
2422 1191 Pls
3269 2082 Pls
3545 2481 Pls
4184 3114 Pls
2535 1404 Pls
5151 3976 Pls
4570 3341 Pls
4996 3577 Pls
3978 2852 Pls
3107 1889 Pls
5154 4066 Pls
2595 1463 Pls
3441 2230 Pls
2191 990 Pls
4723 3440 Pls
5066 3875 Pls
4480 3240 Pls
3632 2489 Pls
5063 3750 Pls
4935 3766 Pls
2766 1497 Pls
5131 3975 Pls
4016 2926 Pls
5061 3709 Pls
2943 1731 Pls
4395 3237 Pls
2478 1391 Pls
2820 1728 Pls
3355 2080 Pls
2809 1504 Pls
3101 1923 Pls
5071 3861 Pls
2253 1160 Pls
4764 3506 Pls
5195 4104 Pls
5305 4038 Pls
5082 3850 Pls
3095 1942 Pls
5412 4085 Pls
3136 1907 Pls
2787 1519 Pls
3391 2329 Pls
4566 3200 Pls
2321 1018 Pls
2533 1424 Pls
2493 1393 Pls
3522 2193 Pls
4282 3127 Pls
4693 3434 Pls
2387 1030 Pls
3150 1883 Pls
3972 2635 Pls
4696 3598 Pls
4158 2986 Pls
2655 1546 Pls
4564 3279 Pls
4344 3265 Pls
4997 3836 Pls
3589 2206 Pls
2701 1534 Pls
3333 2121 Pls
5284 4150 Pls
2937 1729 Pls
3844 2597 Pls
4311 3045 Pls
3696 2471 Pls
5453 4266 Pls
2852 1600 Pls
2564 1346 Pls
5135 3811 Pls
2512 1336 Pls
3899 2757 Pls
5033 3774 Pls
3430 2225 Pls
4023 2853 Pls
3966 2753 Pls
2242 1008 Pls
3224 2143 Pls
5331 4193 Pls
5223 3905 Pls
2803 1569 Pls
4351 3123 Pls
3980 2690 Pls
4841 3578 Pls
4563 3306 Pls
5341 4114 Pls
5379 4150 Pls
5348 4037 Pls
2910 1592 Pls
5297 3979 Pls
4492 3404 Pls
5452 4217 Pls
3964 2711 Pls
3760 2606 Pls
3689 2450 Pls
2541 1209 Pls
3892 2554 Pls
3612 2458 Pls
5192 3923 Pls
3947 2757 Pls
3268 2173 Pls
2331 1152 Pls
4979 3740 Pls
2666 1428 Pls
2263 1233 Pls
5238 4218 Pls
5125 3899 Pls
5435 4157 Pls
5503 4155 Pls
4194 2911 Pls
2420 1237 Pls
5305 4071 Pls
2186 1064 Pls
3024 1856 Pls
3164 2001 Pls
2752 1363 Pls
5335 4047 Pls
5434 4219 Pls
3763 2380 Pls
4718 3482 Pls
4045 2909 Pls
5252 4009 Pls
5335 4081 Pls
2813 1686 Pls
2184 1123 Pls
3241 2125 Pls
3989 2660 Pls
4096 2913 Pls
5332 4159 Pls
5297 4075 Pls
4708 3440 Pls
3063 1834 Pls
2559 1231 Pls
3823 2526 Pls
4635 3318 Pls
4908 3712 Pls
5175 3942 Pls
3323 2121 Pls
3639 2452 Pls
2649 1546 Pls
2340 1216 Pls
2445 1189 Pls
4644 3281 Pls
4761 3430 Pls
3381 2195 Pls
2565 1253 Pls
4745 3418 Pls
3413 2240 Pls
3431 2200 Pls
2477 1263 Pls
2806 1707 Pls
3284 2052 Pls
4917 3723 Pls
2620 1590 Pls
4235 2901 Pls
5071 3881 Pls
3227 2117 Pls
4272 3210 Pls
4467 3234 Pls
4078 2852 Pls
3634 2366 Pls
5450 4171 Pls
5330 4089 Pls
3595 2369 Pls
3146 1835 Pls
3831 2639 Pls
4738 3467 Pls
3590 2339 Pls
3541 2319 Pls
2808 1448 Pls
2807 1433 Pls
2357 1151 Pls
2691 1524 Pls
3854 2580 Pls
2428 1266 Pls
2948 1640 Pls
3609 2283 Pls
3347 2182 Pls
2553 1417 Pls
2692 1672 Pls
3056 1863 Pls
4138 3066 Pls
3906 2769 Pls
5077 4016 Pls
3460 2304 Pls
3659 2397 Pls
4641 3319 Pls
3380 2112 Pls
2163 1059 Pls
2868 1760 Pls
3525 2135 Pls
4799 3523 Pls
3816 2497 Pls
3816 2586 Pls
5248 4036 Pls
4684 3414 Pls
2583 1358 Pls
4157 2962 Pls
3648 2495 Pls
4464 3237 Pls
2952 1815 Pls
3631 2552 Pls
4515 3351 Pls
3984 2680 Pls
4819 3543 Pls
5018 3747 Pls
4680 3314 Pls
3346 2038 Pls
2340 1080 Pls
3664 2515 Pls
5272 4074 Pls
3164 1784 Pls
2327 1125 Pls
3739 2504 Pls
4932 3716 Pls
3927 2828 Pls
3918 2769 Pls
3277 2035 Pls
3532 2219 Pls
2136 1092 Pls
2452 1097 Pls
5098 3878 Pls
5387 3971 Pls
4571 3217 Pls
4109 2869 Pls
2392 1098 Pls
4166 3045 Pls
4925 3730 Pls
2644 1392 Pls
3925 2639 Pls
2374 1271 Pls
2787 1546 Pls
4913 3766 Pls
2884 1583 Pls
4535 3150 Pls
5324 4110 Pls
4923 3620 Pls
3240 2039 Pls
2855 1740 Pls
4629 3376 Pls
5402 4209 Pls
4319 3099 Pls
3772 2636 Pls
4316 3083 Pls
3447 2270 Pls
4270 3069 Pls
3358 2111 Pls
2903 1706 Pls
2556 1209 Pls
2593 1391 Pls
4100 2895 Pls
2664 1599 Pls
3960 2737 Pls
3087 1768 Pls
3381 2056 Pls
5308 3981 Pls
2477 1095 Pls
3120 1836 Pls
2602 1248 Pls
4908 3898 Pls
3794 2562 Pls
4757 3585 Pls
3927 2591 Pls
5019 3833 Pls
4088 2898 Pls
2730 1344 Pls
2852 1513 Pls
5001 3723 Pls
3707 2597 Pls
5202 3813 Pls
4866 3745 Pls
5333 4009 Pls
4029 2803 Pls
3042 1718 Pls
4724 3569 Pls
3695 2438 Pls
3258 2001 Pls
4793 3452 Pls
2595 1455 Pls
3324 2021 Pls
2356 1194 Pls
2755 1516 Pls
5234 4149 Pls
3981 2678 Pls
3357 2035 Pls
3084 1735 Pls
2679 1372 Pls
2549 1393 Pls
3580 2192 Pls
3194 1962 Pls
2349 1124 Pls
3301 2015 Pls
3175 2039 Pls
5044 3677 Pls
4576 3400 Pls
2198 1109 Pls
3978 2783 Pls
4882 3647 Pls
3735 2456 Pls
4678 3449 Pls
3701 2444 Pls
4509 3366 Pls
2497 1377 Pls
3302 1977 Pls
4984 3655 Pls
2920 1560 Pls
4196 2878 Pls
3474 2190 Pls
3694 2354 Pls
2719 1503 Pls
4889 3659 Pls
4720 3522 Pls
2457 1173 Pls
2823 1733 Pls
4279 3148 Pls
3472 2350 Pls
4411 3297 Pls
5153 3968 Pls
3979 2780 Pls
3841 2635 Pls
5173 4053 Pls
3074 1750 Pls
2525 1223 Pls
3844 2645 Pls
3904 2686 Pls
2391 1178 Pls
2347 1218 Pls
3841 2468 Pls
3916 2736 Pls
2263 1002 Pls
2375 1130 Pls
5141 3884 Pls
2451 1309 Pls
3238 2056 Pls
3600 2430 Pls
5383 4204 Pls
3403 2249 Pls
3434 2281 Pls
4169 3094 Pls
5009 3845 Pls
2635 1338 Pls
2231 1023 Pls
3346 2055 Pls
4287 2887 Pls
3338 2038 Pls
1.000 UL
LTb
1663 4775 N
0 -4335 V
4335 0 V
0 4335 V
-4335 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
