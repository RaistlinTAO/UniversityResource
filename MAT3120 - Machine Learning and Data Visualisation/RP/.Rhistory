categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
# (iii)
# Part 2 – Perform PCA and Visualise Data
# (i)
# (ii)
#Write to a csv file.
# write.csv(mydata,"mydata.csv")
# (iii)
# (iv)
# (v)
table(continuesData)
summary(continuesData)
str(categoryData)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Part 1 – Exploratory Data Analysis and Data Cleaning
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
categoryData$Class= as.factor(categoryData$Class)
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
summary(continuesData)
# (iii)
# Part 2 – Perform PCA and Visualise Data
# (i)
# (ii)
#Write to a csv file.
# write.csv(mydata,"mydata.csv")
# (iii)
# (iv)
# (v)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Part 1 – Exploratory Data Analysis and Data Cleaning
# (i)
mydata$Class= as.factor(mydata$Class)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
# mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
summary(continuesData)
# (iii)
# Part 2 – Perform PCA and Visualise Data
# (i)
# (ii)
#Write to a csv file.
# write.csv(mydata,"mydata.csv")
# (iii)
# (iv)
# (v)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
# mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
table(continuesData)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
# mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
summary(continuesData)
# (iii)
# Part 2 – Perform PCA and Visualise Data
# (i)
# (ii)
#Write to a csv file.
# write.csv(mydata,"mydata.csv")
# (iii)
# (iv)
# (v)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
# mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
IncrementalTable<-c()
summary(continuesData)
# (iii)
# Part 2 – Perform PCA and Visualise Data
# (i)
# (ii)
#Write to a csv file.
# write.csv(mydata,"mydata.csv")
# (iii)
# (iv)
# (v)
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
# mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
continuesResult = data.frame()
for (i in 1:ncol(continuesData)) {       # for-loop over columns
output = c(continuesData[names(continuesData)[i]], sum(is.na(continuesData[, i])) / 6, min(continuesData[, i]), max(continuesData[, i]), mean(continuesData[, i]), median(continuesData[, i]))
# Using rbind() to append the output of one iteration to the dataframe
continuesResult = rbind(continuesResult, output)
}
# Set Working Folder
setwd("E:/Projects/RP")
# Install dplyr
#install.packages("dplyr")
#install.packages('plyr')
#install.packages("stringr")
#install.packages("moments")
# Load Library
library(plyr)
library(dplyr)
library(stringr)
library(data.table)
library(moments)
# Load CSV
dat <- read.csv("MLData2023.csv", stringsAsFactors = TRUE)
head(dat)
# Separate samples of non-malicious and malicious events
dat.class0 <- dat %>% filter(Class == 0) # non-malicious
dat.class1 <- dat %>% filter(Class == 1) # malicious
# Randomly select 300 samples from each class, then combine them to form a working dataset
set.seed(1122)
rand.class0 <- dat.class0[sample(1:nrow(dat.class0), size = 300, replace = FALSE),]
rand.class1 <- dat.class1[sample(1:nrow(dat.class1), size = 300, replace = FALSE),]
# Your sub-sample of 600 observations
mydata <- rbind(rand.class0, rand.class1)
dim(mydata) # Check the dimension of your sub-sample
# Use the str(.) command to check that the data type for each feature is correctly specified. Address the issue if this is not the case.
# You are to clean and perform basic data analysis on the relevant features in mydata, and as well as principal component analysis (PCA) on the continuous variables. This is to be done using “R”. You will report on your findings.
# mydata$Class= as.factor(mydata$Class)
# Part 1 – Exploratory Data Analysis and Data Cleaning
# Note: The tables for subparts (i) and (ii) should be based on the original sub- sample of 600 observations, not the cleaned version.
# (i)
str(mydata)
categoryData <- cbind(mydata %>% dplyr::select(where(is.factor)), Class = mydata$Class)
continuesData <- subset(mydata %>% dplyr::select(where(is.numeric)), select = -Class)
categoryData[categoryData == "" |
categoryData == ' ' |
categoryData == '-'] <- NA
str(categoryData)
freqList = lapply(categoryData,
function(x) {
tempList = data.frame(table(x))
tempList[, 2] = str_c(tempList[, 2], " (", round(tempList[, 2] / 6, 1), "%)")
names(tempList) = c("Category", "N (%)")
return(tempList)
}
)
categoryFreqTable <- as.data.frame(do.call(rbind, freqList))
setDT(categoryFreqTable, keep.rownames = TRUE)[]
categoryFreqTable$rn <- ifelse(str_detect(categoryFreqTable$rn, '.1'), str_replace(categoryFreqTable$rn, '.1', ''), '')
colnames(categoryFreqTable)[1] = "Categorical Feature"
categoryFreqTable
# (ii)
continuesResult = data.frame()
for (i in 1:ncol(continuesData)) {       # for-loop over columns
output = c(names(continuesData)[i], sum(is.na(continuesData[, i])) / 6, round(min(continuesData[, i]), 2), round(max(continuesData[, i]), 2), round(mean(continuesData[, i]), 2), round(median(continuesData[, i])), skewness(continuesData[, i]))
# Using rbind() to append the output of one iteration to the dataframe
continuesResult = rbind(continuesResult, output)
}
colnames(continuesResult) <- c("Continuous Feature", "Number (%) missing", "Min", "Max", "Mean", "Median", "Skewness")
continuesResult
# (iii)
# Part 2 – Perform PCA and Visualise Data
# (i)
# (ii)
#Write to a csv file.
# write.csv(mydata,"mydata.csv")
# (iii)
# (iv)
# (v)
